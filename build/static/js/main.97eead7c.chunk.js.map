{"version":3,"sources":["components/Notification.jsx","content.js","App.js","index.js"],"names":["Notification","message","style","includes","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","baseUrl","axios","get","then","data","catch","err","console","error","newObject","post","response","id","put","delete","res","PhoneBook","useState","persons","setPersons","newName","setNewName","newNum","setNewNum","search","searchBy","sucess","setSucess","useEffect","content","initialNotes","log","length","type","value","onChange","e","target","filter","name","toLowerCase","required","onSubmit","preventDefault","finder","person","trim","window","confirm","number","map","setTimeout","concat","personIndex","onClick","ids","returnedNote","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.97eead7c.chunk.js","sourcesContent":["const Notification = ({ message }) => {\n    const red = {\n        color: \"red\",\n        background: \"lightgrey\",\n        fontSize: 20,\n        borderStyle: \"solid\",\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n\n    }\n    const green = {\n        color: \"green\",\n        background: \"lightgrey\",\n        fontSize: 20,\n        borderStyle: \"solid\",\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n\n    }\n    if (!message) return null\n\n\n    return (\n        <div style={message.includes(\"added\") ? green : red}>\n            {message}\n        </div>\n    )\n}\nexport default Notification","  import axios from 'axios'\n\nconst baseUrl = 'api/persons'\n\n\n const getAll = () => {\n   return (  axios.get(baseUrl)\n     .then(({data}) => data)\n     .catch(err => console.error(err)) )\n     \n }\n\n const create = (newObject) => {\n    return ( axios.post(baseUrl,newObject)\n     .then(response => response.data) )\n }\n\n const update = (id, newObject) => {\n    return ( axios.put(`${baseUrl}/${id}`,newObject)\n     .then(response => response.data) )\n }\n\n const deletePerson = (id) => {\n     const request = axios.delete(`${baseUrl}/${id}`) \n     return ( request.then(res => res.data))\n         \n }\n\n export default {getAll, create, update, deletePerson}","\nimport { useState, useEffect } from \"react\";\nimport Notification from \"./components/Notification\";\nimport content from \"./content\";\n\nconst PhoneBook = () => {\n  \n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNum, setNewNum] = useState(\"\"); \n  const [search, searchBy]  = useState('')\n  const [sucess, setSucess] = useState('')\n  \n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const finder = persons.filter((person)=> person.name === newName.trim())\n    finder.length ? (\n      <>\n      {window.confirm(\"This name already exists,replace the old numbers\") === true\n       ? content.update(finder[0].id, {name: newName, number :newNum.trim()}).then((value)=> {\n         setPersons(\n           persons.map((person)=> \n           person.id !== finder[0].id ? person : value \n           )\n         );\n        }\n       )\n       .catch((err)=>{\n         setSucess('name has already be deleted from the server')\n         setTimeout(() => {\n           setSucess('')\n         }, 2000);\n       })\n      : \"\"}\n      </>\n    ): (\n       content\n      .create({name:newName,number:newNum})\n      .then(data => {\n        setPersons(persons.concat(data))\n        setSucess(\"added new name\")\n        setTimeout(() => {\n           setSucess('')\n         }, 5000);\n      })\n      )\n    \n    setNewName('')\n    setNewNum('')\n  };\n\n  const handleNoteChange = (e) => {\n       setNewName(e.target.value)\n  }\n\n   const filterWith = (e) => {\n         searchBy(e.target.value)\n        setPersons(persons.filter(({name})=> name.toLowerCase().includes(search.toLowerCase())))\n   }\n\n  useEffect(() => {\n    content\n     .getAll()\n      .then((initialNotes) => {\n      console.log('promise fulfilled');\n      setPersons(initialNotes)\n      })\n  }, [])\n  console.log('render', persons.length, 'persons')\n\n\n  const toggleImportanceOf = ids => {\n     \n    content\n    .deletePerson(ids)\n      .then(returnedNote => { \n    setPersons(persons.filter(({id}) => id !== ids))\n       \n    })\n    .catch(error => {\n      console.error(error)\n    })    \n  }\n\n  return (\n    <div>\n      <h2>PhoneBook</h2>\n    <Notification message = {sucess}/>\n     <h2>add a new</h2>\n     <div>filter shown with\n         <input\n          type=\"text\"      \n          value={search}      \n          onChange = {filterWith}      \n          required\n        />\n     </div>\n     <br/> \n     <br/> \n\n      <form onSubmit = {handleSubmit}>  \n       <div>name : <input\n          type=\"text\"      \n          value={newName}\n          onChange = {handleNoteChange}\n          required\n        /></div>\n        {/* <br/>  */}\n        <div>number : <input \n        type=\"number\"\n        value = {newNum} \n        onChange = {(e) => setNewNum(e.target.value)}\n        required\n        /></div>\n\n        <br/> \n        <button>add</button>\n        <br/>\n      </form>\n\n      <h2>Numbers</h2>\n      <ul>\n        {\n        persons.map((person, personIndex) => \n          <li key ={`list${personIndex}`}>{person.name} {person.number}  <button onClick={() => toggleImportanceOf(person.id)}>Delete</button></li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default PhoneBook;\n","import ReactDOM from 'react-dom';\nimport React from 'react'\nimport App from './App';\n\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}
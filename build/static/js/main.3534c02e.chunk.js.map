{"version":3,"sources":["components/Notification.jsx","content.js","App.js","index.js"],"names":["Notification","message","style","includes","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","baseUrl","axios","get","then","data","catch","err","console","error","updatePerson","post","response","id","newObject","put","delete","res","PhoneBook","useState","persons","setPersons","newName","setNewName","newNum","setNewNum","search","searchBy","sucess","setSucess","name","number","useEffect","content","initialNotes","log","length","type","value","onChange","e","target","filter","toLowerCase","required","onSubmit","preventDefault","finder","person","trim","window","confirm","map","setTimeout","concat","personIndex","onClick","ids","returnedNote","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.3534c02e.chunk.js","sourcesContent":["const Notification = ({ message }) => {\n    const red = {\n        color: \"red\",\n        background: \"lightgrey\",\n        fontSize: 20,\n        borderStyle: \"solid\",\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n\n    }\n    const green = {\n        color: \"green\",\n        background: \"lightgrey\",\n        fontSize: 20,\n        borderStyle: \"solid\",\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n\n    }\n    if (!message) return null\n\n\n    return (\n        <div style={message.includes(\"added\") ? green : red}>\n            {message}\n        </div>\n    )\n}\nexport default Notification","import axios from \"axios\";\n\nconst baseUrl = \"api/persons\";\n\nconst getAll = () => {\n  return axios\n    .get(baseUrl)\n    .then(({ data }) => data)\n    .catch((err) => console.error(err));\n};\n\nconst create = (updatePerson) => {\n  return axios.post(baseUrl, updatePerson).then((response) => response.data);\n};\n\nconst update = (id, newObject) => {\n  return axios\n    .put(`${baseUrl}/${id}`, newObject)\n    .then((response) => response.data);\n};\n\nconst deletePerson = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then((res) => res.data);\n};\n\nexport default { getAll, create, update, deletePerson };\n","import { useState, useEffect } from \"react\";\nimport Notification from \"./components/Notification\";\nimport content from \"./content\";\n\nconst PhoneBook = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNum, setNewNum] = useState(\"\");\n  const [search, searchBy] = useState(\"\");\n  const [sucess, setSucess] = useState(\"\");\n\n  const updatePerson = { name: newName, number: newNum };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const finder = persons.filter((person) => person.name === newName.trim());\n    finder.length ? (\n      <>\n        {window.confirm(\"This name already exists,replace the old numbers\") ===\n        true\n          ? content\n              .update(finder[0].id, { name: newName, number: newNum.trim() })\n              .then((value) => {\n                setPersons(\n                  persons.map((person) =>\n                    person.id !== finder[0].id ? person : value\n                  )\n                );\n              })\n              .catch((err) => {\n                if (err.response.data) {\n                  setSucess(err.response.data.error);\n                } else {\n                  setSucess(`name was already be deleted from the server`);\n                }\n                setTimeout(() => {\n                  setSucess(\"\");\n                }, 2000);\n              })\n          : \"\"}\n      </>\n    ) : (\n      content\n        .create(updatePerson)\n        .then((response) => {\n          setPersons(persons.concat(response));\n          setSucess(\"added new name\");\n          setTimeout(() => {\n            setSucess(\"\");\n          }, 5000);\n        })\n        .catch((error) => {\n          console.log(\n            error.response.data.error,\n            typeof error.response.data.error\n          );\n          setSucess(error.response.data.error);\n          setTimeout(() => {\n            setSucess(\"\");\n          }, 3000);\n        })\n    );\n\n    setNewName(\"\");\n    setNewNum(\"\");\n  };\n\n  const handleNoteChange = (e) => {\n    setNewName(e.target.value);\n  };\n\n  const filterWith = (e) => {\n    searchBy(e.target.value);\n    setPersons(\n      persons.filter(({ name }) =>\n        name.toLowerCase().includes(search.toLowerCase())\n      )\n    );\n  };\n\n  useEffect(() => {\n    content.getAll().then((initialNotes) => {\n      console.log(\"promise fulfilled\");\n      setPersons(initialNotes);\n    });\n  }, []);\n  console.log(\"render\", persons.length, \"persons\");\n\n  const toggleImportanceOf = (ids) => {\n    content\n      .deletePerson(ids)\n      .then((returnedNote) => {\n        setPersons(persons.filter(({ id }) => id !== ids));\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  return (\n    <div>\n      <h2>PhoneBook</h2>\n      <Notification message={sucess} />\n      <h2>add a new</h2>\n      <div>\n        filter shown with\n        <input type=\"text\" value={search} onChange={filterWith} required />\n      </div>\n      <br />\n      <br />\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          name :{\" \"}\n          <input\n            type=\"text\"\n            value={newName}\n            onChange={handleNoteChange}\n            required\n          />\n        </div>\n        {/* <br/>  */}\n        <div>\n          number :{\" \"}\n          <input\n            type=\"text\"\n            value={newNum}\n            onChange={(e) => setNewNum(e.target.value)}\n            required\n          />\n        </div>\n\n        <br />\n        <button>add</button>\n        <br />\n      </form>\n\n      <h2>Numbers</h2>\n      <ul>\n        {persons.map((person, personIndex) => (\n          <li key={`list${personIndex}`}>\n            {person.name} {person.number}{\" \"}\n            <button onClick={() => toggleImportanceOf(person.id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default PhoneBook;\n","import ReactDOM from 'react-dom';\nimport React from 'react'\nimport App from './App';\n\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}